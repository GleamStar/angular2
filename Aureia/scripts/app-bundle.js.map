{"version":3,"sources":["app.ts","environment.ts","main.ts","resources/index.ts","C:/Users/Alexey/Desktop/Demo/Step1/Aureia/src/app.html","C:/Users/Alexey/Desktop/Demo/Step1/Aureia/src/style.css"],"names":[],"mappings":";;IAAA;QAAA;YACE,UAAK,GACH;gBACE,EAAE,SAAS,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;gBAChD,EAAE,SAAS,EAAE,UAAU,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;gBACjD,EAAE,SAAS,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;gBAChD,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAC,KAAK,EAAE;aAC/C,CAAC;QASN,CAAC;QARC,qBAAO,GAAP,UAAQ,IAAY,EAAE,IAAY,EAAE,IAAa;YAE/C,EAAE,CAAA,CAAC,IAAI,IAAE,IAAI,IAAI,IAAI,IAAE,SAAS,IAAI,IAAI,CAAC,IAAI,EAAE,IAAE,EAAE,CAAC;gBAClD,MAAM,CAAC;YACT,EAAE,CAAA,CAAC,IAAI,IAAE,IAAI,IAAI,IAAI,IAAE,SAAS,CAAC;gBAC/B,MAAM,CAAC;YACT,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;QAC9C,CAAC;QACH,UAAC;IAAD,CAhBA,AAgBC,IAAA;IAhBY,WAAG,MAgBf,CAAA;IAED;QAKE,cAAY,SAAiB,EAAE,IAAY,EAAE,IAAc;YAEzD,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;YAC3B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YACjB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACnB,CAAC;QACH,WAAC;IAAD,CAXA,AAWC,IAAA;IAXY,YAAI,OAWhB,CAAA;;;;;IC7BD;sBAAe;QACb,KAAK,EAAE,IAAI;QACX,OAAO,EAAE,IAAI;KACd,CAAC;;;;;ICEI,OAAQ,CAAC,MAAM,CAAC;QACpB,QAAQ,EAAE;YACR,gBAAgB,EAAE,KAAK;SACxB;KACF,CAAC,CAAC;IAEH,mBAA0B,OAAgB;QACxC,OAAO,CAAC,GAAG;aACR,qBAAqB,EAAE;aACvB,OAAO,CAAC,WAAW,CAAC,CAAC;QAExB,EAAE,CAAC,CAAC,qBAAW,CAAC,KAAK,CAAC,CAAC,CAAC;YACtB,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,CAAC;QACnC,CAAC;QAED,EAAE,CAAC,CAAC,qBAAW,CAAC,OAAO,CAAC,CAAC,CAAC;YACxB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;QACxC,CAAC;QAED,OAAO,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,cAAM,OAAA,OAAO,CAAC,OAAO,EAAE,EAAjB,CAAiB,CAAC,CAAC;IAChD,CAAC;IAde,iBAAS,YAcxB,CAAA;;;;;ICvBD,mBAA0B,MAA8B;IAExD,CAAC;IAFe,iBAAS,YAExB,CAAA;;;ACJD;ACAA","file":"app-bundle.js","sourcesContent":["export class App {\n  items: Item[] =\n    [\n      { framework: \"Angular\", year: 2009, used: true },\n      { framework: \"Angular2\", year: 2016, used: true },\n      { framework: \"Aurelia\", year: 2016, used: true },\n      { framework: \"React\", year: 2015, used:false }\n    ];\n  addItem(name: string, year: number, used: boolean): void {\n\n    if(name==null || name==undefined || name.trim()==\"\")\n      return;\n    if(year==null || year==undefined)\n      return;\n    this.items.push(new Item(name, year, used));\n  }\n}\n\nexport class Item{\n  framework: string;\n  year: number;\n  used: boolean;\n\n  constructor(framework: string, year: number, used : boolean) {\n\n    this.framework = framework;\n    this.year = year;\n    this.used = used;\n  }\n}\n\n\n","export default {\n  debug: true,\n  testing: true\n};\n","import {Aurelia} from 'aurelia-framework'\nimport environment from './environment';\nimport 'bootstrap'\n//Configure Bluebird Promises.\n//Note: You may want to use environment-specific configuration.\n(<any>Promise).config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia: Aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import {FrameworkConfiguration} from 'aurelia-framework';\n\nexport function configure(config: FrameworkConfiguration) {\n  //config.globalResources([]);\n}\n",null,null],"sourceRoot":"..\\src"}